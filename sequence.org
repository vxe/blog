# -*- mode:org -*-
#+TITLE: sequence
#+STARTUP: indent
#+OPTIONS: toc:nil

so the sequence data-type is list sure, but we have better word to
describe that.  A sequence on the other hand is an instance of a
finite series from mathematics.  A useful thing.  As it turns out,
most interesting series have a simple declarative implementations a
recursive functions of a interger value n.  n in this case will be the
number of terms of the series to be calculated, and thus the decrement
of it corresponds to sequential steps of the recursion.  eg the zeta
function 

#+BEGIN_SRC elisp
(defun zeta (n s)
         (if (= n 0)
             0
           (+
            (expt n (* -1 s))
            (zeta (- n 1) s))))
#+END_SRC


Thats as about as general as you're going to get?  It addition to the
terminating condition is a value of zero.  n is the number of terms
and the value of the function to be evaluated at.  Simple.
** tags                                                           :recursion:
