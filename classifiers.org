# _*_ mode:org _*_
#+TITLE: classifiers
#+STARTUP: indent
#+OPTIONS: toc:nil



* weka implementations

** J48
** NaiveBayes
** LinearRegression
** LogisticRegression
** Support Vector Machine
** Instance Based Learners
*** K*
*** K-nearest neighbors
** RIPPER
* example classification problems
** best-embryo-selection
#+BEGIN_QUOTE
The problem is to select the “best” embryos to use— the ones that are
most likely to survive. Selection is based on around 60 recorded
features of the embryos— characterizing their morphology, oocyte,
follicle, and sperm sample. The number of features is sufficiently
large that it is difficult for an embryologist to assess them all
simultaneously and correlate historical data with the crucial outcome
of whether

Witten, Ian H.; Frank, Eibe; Hall, Mark A.; Pal, Christopher J.. Data
Mining: Practical Machine Learning Tools and Techniques (Morgan
Kaufmann Series in Data Management Systems) (p. 4). Elsevier
Science. Kindle Edition.
#+END_QUOTE


* concept

Anytime you are doing pattern recognition of any type you are writing
a classifier.  Regex are classifiers and therefore and application
which takes in strings and arrives at a conclusion from that data is
an AI application, unfortunately.

The a defining characteristic of a classifiers is that it needs to be
trained on input data, if one cannot be declaratively specified (the
regex example).  This forms the basis of statistical classifiers, as
distinct from the declarative classifiers (I just made up the
distinction but who cares, seems right to be).

- [ ] decision-tree
- [ ] neural-network
- [ ] k-nearest neighbor
- [ ] support vector machine
- [ ] Gaussian mixture model
- [ ] naive Bayes classifier

The decision tree[199] is perhaps the most widely used machine
learning algorithm.[200] Other widely used classifiers are the neural
network,[201] k-nearest neighbor algorithm,[g][203] kernel methods
such as the support vector machine (SVM),[h][205] Gaussian mixture
model,[206] and the extremely popular naive Bayes classifier.



















* local_vars
  # Local Variables:
  # eval: (wiki-mode)
  # End:
